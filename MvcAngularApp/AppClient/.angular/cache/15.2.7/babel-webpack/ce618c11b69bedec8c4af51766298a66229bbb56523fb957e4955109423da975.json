{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UrlService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:44385/api/urls';\n  }\n  createUrl(url) {\n    return this.http.post(`${this.baseUrl}/urls`, url);\n  }\n  // Get a single Url by id\n  getUrl(id) {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n  // Get all Urls\n  getUrls() {\n    return this.http.get(`${this.baseUrl}/all`);\n  }\n  // Get all own Urls\n  getOwnUrls() {\n    return this.http.get(`${this.baseUrl}/own`);\n  }\n  // Delete a Url by id\n  deleteByIdUrl(id) {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n  // Delete a Url by id\n  deleteUrl(url) {\n    return this.http.delete(`${this.baseUrl}`);\n  }\n}\nUrlService.ɵfac = function UrlService_Factory(t) {\n  return new (t || UrlService)(i0.ɵɵinject(i1.HttpClient));\n};\nUrlService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UrlService,\n  factory: UrlService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,UAAU;EAGrBC,YAAoBC,IAAiB;IAAjB,SAAI,GAAJA,IAAI;IAFxB,YAAO,GAAG,kCAAkC;EAEH;EAEzCC,SAAS,CAACC,GAAQ;IAChB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAM,GAAG,IAAI,CAACC,OAAO,OAAO,EAAEF,GAAG,CAAC;EACzD;EAEA;EACAG,MAAM,CAACC,EAAU;IACf,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAM,GAAG,IAAI,CAACH,OAAO,IAAIE,EAAE,EAAE,CAAC;EACpD;EAEA;EACAE,OAAO;IACL,OAAO,IAAI,CAACR,IAAI,CAACO,GAAG,CAAQ,GAAG,IAAI,CAACH,OAAO,MAAM,CAAC;EACpD;EAEA;EACAK,UAAU;IACR,OAAO,IAAI,CAACT,IAAI,CAACO,GAAG,CAAQ,GAAG,IAAI,CAACH,OAAO,MAAM,CAAC;EACpD;EAEA;EACAM,aAAa,CAACJ,EAAU;IACtB,OAAO,IAAI,CAACN,IAAI,CAACW,MAAM,CAAM,GAAG,IAAI,CAACP,OAAO,IAAIE,EAAE,EAAE,CAAC;EACvD;EAEA;EACAM,SAAS,CAACV,GAAQ;IAChB,OAAO,IAAI,CAACF,IAAI,CAACW,MAAM,CAAM,GAAG,IAAI,CAACP,OAAO,EAAE,CAAC;EACjD;;AAhCWN,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAe,SAAVf,UAAU;EAAAgB,YAFT;AAAM","names":["UrlService","constructor","http","createUrl","url","post","baseUrl","getUrl","id","get","getUrls","getOwnUrls","deleteByIdUrl","delete","deleteUrl","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\kachm\\source\\repos\\MvcAngularApp\\MvcAngularApp\\AppClient\\src\\app\\urls\\shared\\url.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Url } from './url';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UrlService {\n  baseUrl = 'https://localhost:44385/api/urls';\n\n  constructor(private http : HttpClient) { }\n\n  createUrl(url: Url): Observable<Url> {\n    return this.http.post<Url>(`${this.baseUrl}/urls`, url);\n  }\n\n  // Get a single Url by id\n  getUrl(id: number): Observable<Url> {\n    return this.http.get<Url>(`${this.baseUrl}/${id}`);\n  }\n\n  // Get all Urls\n  getUrls(): Observable<Url[]> {\n    return this.http.get<Url[]>(`${this.baseUrl}/all`);\n  }\n\n  // Get all own Urls\n  getOwnUrls(): Observable<Url[]> {\n    return this.http.get<Url[]>(`${this.baseUrl}/own`);\n  }\n\n  // Delete a Url by id\n  deleteByIdUrl(id: number): Observable<Url> {\n    return this.http.delete<Url>(`${this.baseUrl}/${id}`);\n  }\n\n  // Delete a Url by id\n  deleteUrl(url: Url): Observable<Url> {\n    return this.http.delete<Url>(`${this.baseUrl}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}